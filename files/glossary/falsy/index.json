{"title":"Falsy","tag":"glossary/falsy","post":"\n\n{{Sidebar(\"Glossary\")}}\n\n<!-- cSpell:ignore falsey -->\n\nA **falsy** (sometimes written **falsey**) value is a value that is considered false when encountered in a {{Glossary(\"Boolean\")}} context.\n\n{{Glossary(\"JavaScript\")}} uses {{Glossary(\"Type_Conversion\", \"type conversion\")}} to coerce any value to a Boolean in contexts that require it, such as {{Glossary(\"Conditional\", \"conditionals\")}} and {{Glossary(\"Loop\", \"loops\")}}.\n\nThe following table provides a complete list of JavaScript falsy values:\n\n| Value                       | Type      | Description                                                                                                                                         |\n|  | --- |\n| {{Glossary(\"null\")}}        | Null      | The keyword [`null`](/blog/Web/JavaScript/Reference/Operators/null) — the absence of any value.                                               |\n| {{Glossary(\"undefined\")}}   | Undefined | [`undefined`](/blog/Web/JavaScript/Reference/Global_Objects/undefined) — the primitive value.                                                 |\n| `false`                     | Boolean   | The keyword [`false`](/blog/Web/JavaScript/Reference/Lexical_grammar#reserved_words).                                                         |\n| {{Glossary(\"NaN\")}}         | Number    | [`NaN`](/blog/Web/JavaScript/Reference/Global_Objects/NaN) — not a number.                                                                    |\n| `0`                         | Number    | The {{jsxref(\"Number\")}} zero, also including `0.0`, `0x0`, etc.                                                                                    |\n| `-0`                        | Number    | The {{jsxref(\"Number\")}} negative zero, also including `-0.0`, `-0x0`, etc.                                                                         |\n| `0n`                        | BigInt    | The {{jsxref(\"BigInt\")}} zero, also including `0x0n`, etc. Note that there is no {{jsxref(\"BigInt\")}} negative zero — the negation of `0n` is `0n`. |\n| `\"\"`                        | String    | Empty [string](/blog/Web/JavaScript/Reference/Global_Objects/String) value, also including `''` and ` `` `.                                   |\n| {{domxref(\"document.all\")}} | Object    | The only falsy object in JavaScript is the built-in {{domxref(\"document.all\")}}.                                                                    |\n\nThe values `null` and `undefined` are also {{Glossary(\"nullish\")}}.\n\n## Examples\n\nExamples of _falsy_ values in JavaScript (which are coerced to false in Boolean contexts, and thus _bypass_ the `if` block):\n\n```js\nif (false) {\n  // Not reachable\n}\n\nif (null) {\n  // Not reachable\n}\n\nif (undefined) {\n  // Not reachable\n}\n\nif (0) {\n  // Not reachable\n}\n\nif (-0) {\n  // Not reachable\n}\n\nif (0n) {\n  // Not reachable\n}\n\nif (NaN) {\n  // Not reachable\n}\n\nif (\"\") {\n  // Not reachable\n}\n```\n\n### The logical AND operator, &&\n\nIf the first object is falsy, it returns that object:\n\n```js\nconsole.log(false && \"dog\");\n// ↪ false\n\nconsole.log(0 && \"dog\");\n// ↪ 0\n```\n\n## See also\n\n- Related glossary terms:\n  - {{Glossary(\"Truthy\")}}\n  - {{Glossary(\"Type_coercion\", \"Coercion\")}}\n  - {{Glossary(\"Boolean\")}}\n- [Boolean coercion](/blog/Web/JavaScript/Reference/Global_Objects/Boolean#boolean_coercion)\n","slug":"28be110f358b45aba6e73fa73224a27e","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T09:59:54.847Z","dateupdated":"2025-07-05T09:59:54.847Z","layout":"PostBanner"}