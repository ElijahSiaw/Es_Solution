{"title":"Literal","tag":"glossary/literal","post":"\n\n{{Sidebar(\"Glossary\")}}\n\n**Literals** represent values in JavaScript. These are fixed values—not variables—that you _literally_ provide in your script.\n\n- [Array literals](/blog/Web/JavaScript/Guide/Grammar_and_types#array_literals)\n- [Boolean literals](/blog/Web/JavaScript/Guide/Grammar_and_types#boolean_literals)\n- [Floating-point literals](/blog/Web/JavaScript/Guide/Grammar_and_types#floating-point_literals)\n- [Numeric literals](/blog/Web/JavaScript/Guide/Grammar_and_types#numeric_literals)\n- [Object literals](/blog/Web/JavaScript/Guide/Grammar_and_types#object_literals)\n- [RegExp literals](/blog/Web/JavaScript/Guide/Grammar_and_types#regexp_literals)\n- [String literals](/blog/Web/JavaScript/Guide/Grammar_and_types#string_literals)\n\n## Examples\n\n### String literals\n\nA string literal is zero or more characters enclosed in double (`\"`) or single quotation marks (`'`). A string must be delimited by quotation marks of the same type (that is, either both single quotation marks, or both double quotation marks).\n\nThe following are examples of string literals:\n\n```js\n\"foo\";\n\"bar\";\n\"1234\";\n\"one line \\n new line\";\n\"Joyo's cat\";\n```\n\n### Object literals\n\nAn object literal is a list of zero or more pairs of property names and associated values of an object, enclosed in curly braces (`{}`).\n\nThe following is an example of an object literal. The first element of the `car` object defines a property, `myCar`, and assigns to it a new string, `\"Toyota\"`; the second element, the `getCar` property, is immediately assigned the result of invoking the function `carTypes('Honda')`; the third element, the `special` property, uses an existing variable (`sales`).\n\n```js\nconst sales = \"BMW\";\n\nfunction carTypes(name) {\n  return name === \"Honda\" ? name : `Sorry, we don't sell ${name}.`;\n}\n\nconst car = {\n  myCar: \"Toyota\",\n  getCar: carTypes(\"Honda\"),\n  special: sales,\n};\n\nconsole.log(car.myCar); // Toyota\nconsole.log(car.getCar); // Honda\nconsole.log(car.special); // BMW\n```\n\n## See also\n\n- [Literal](<https://en.wikipedia.org/wiki/Literal_(computer_programming)>) on Wikipedia\n","slug":"104781f9f23b4852876a866edba9f11f","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T10:00:57.579Z","dateupdated":"2025-07-05T10:00:57.579Z","layout":"PostBanner"}