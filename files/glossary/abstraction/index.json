{"title":"Abstraction","tag":"glossary/abstraction","post":"\n\n{{Sidebar(\"Glossary\")}}\n\n**Abstraction** in {{Glossary(\"computer programming\")}} is a way to reduce complexity and allow efficient design and implementation in complex software systems. It hides the technical complexity of systems behind simpler {{Glossary(\"API\", \"APIs\")}}.\n\n## Advantages of Data Abstraction\n\n- Helps the user to avoid writing low-level code.\n- Avoids code duplication and increases reusability.\n- Can change the internal implementation of a class independently without affecting the user.\n- Helps to increase the security of an application or program as only important details are provided to the user.\n\n## Example\n\n```js\nclass ImplementAbstraction {\n  // method to set values of internal members\n  set(x, y) {\n    this.a = x;\n    this.b = y;\n  }\n\n  display() {\n    console.log(`a = ${this.a}`);\n    console.log(`b = ${this.b}`);\n  }\n}\n\nconst obj = new ImplementAbstraction();\nobj.set(10, 20);\nobj.display();\n// a = 10\n// b = 20\n```\n\n## See also\n\n- [Abstraction](<https://en.wikipedia.org/wiki/Abstraction_(computer_science)>) on Wikipedia\n","slug":"f7bbbf9d820943dbb7c75caaa30576f4","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T09:58:48.639Z","dateupdated":"2025-07-05T09:58:48.649Z","layout":"PostBanner"}