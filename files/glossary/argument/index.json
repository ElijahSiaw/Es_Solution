{"title":"Argument","tag":"glossary/argument","post":"\n\n{{Sidebar(\"Glossary\")}}\n\n**Arguments** are {{glossary(\"value\", \"values\")}} ({{Glossary(\"primitive\")}} or {{Glossary(\"object\")}}) passed as input to a {{Glossary(\"function\")}}. Do not confuse arguments with {{Glossary(\"parameter\",\"parameters\")}}, which are the names used in the function definition to refer to the arguments.\n\nFor example:\n\n```js\nconst argument1 = \"Web\";\nconst argument2 = \"Development\";\nexample(argument1, argument2); // passing two arguments\n\n// This function takes two values\nfunction example(parameter1, parameter2) {\n  console.log(parameter1); // Output = \"Web\"\n  console.log(parameter2); // Output = \"Development\"\n}\n```\n\nThe argument order within the function call should be the same as the parameters order in the function definition.\n\n```js\nconst argument1 = \"foo\";\nconst argument2 = [1, 2, 3];\nexample(argument1, argument2); // passing two arguments\n\n// This function takes a single value, so the second argument passed is ignored\nfunction example(parameter) {\n  console.log(parameter); // Output = foo\n}\n```\n\n## See also\n\n- [Difference between parameter and argument](/blog/Glossary/Parameter#parameters_versus_arguments)\n- {{jsxref(\"Functions/arguments\", \"arguments\")}} JavaScript object\n- Related glossary terms:\n  - {{Glossary(\"Function\")}}\n  - {{Glossary(\"Parameter\")}}\n  - {{glossary(\"JavaScript\")}}\n","slug":"a1d119b615d84b7387ea1f3b6d0a0fee","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T09:58:49.565Z","dateupdated":"2025-07-05T09:58:49.565Z","layout":"PostBanner"}