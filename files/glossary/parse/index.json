{"title":"Parse","tag":"glossary/parse","post":"\n\n{{Sidebar(\"Glossary\")}}\n\nParsing means analyzing and converting a program into an internal format that a runtime environment can actually run, for example the {{glossary(\"JavaScript\")}} engine inside browsers.\n\nThe [browser parses HTML](/blog/Learn_web_development/Core/Structuring_content) into a {{glossary('DOM')}} tree. HTML parsing involves [tokenization](/blog/Web/API/DOMTokenList) and tree construction. HTML tokens include start and end tags, as well as attribute names and values. If the document is well-formed, parsing it is straightforward and faster. The parser parses tokenized input into the document, building up the document tree.\n\nWhen the HTML parser finds non-blocking resources, such as an image, the browser will request those resources and continue parsing. Parsing can continue when a CSS file is encountered, but `<script>` tags—particularly those without an [`async`](/blog/Web/JavaScript/Reference/Statements/async_function) or `defer` attribute—blocks rendering, and pauses parsing of HTML.\n\nWhen the browser encounters CSS styles, it parses the text into the CSS Object Model (or {{glossary('CSSOM')}}), a data structure it then uses for styling layouts and painting. The browser then creates a render tree from both these structures to be able to paint the content to the screen. JavaScript is also downloaded, parsed, and then executed.\n\nJavaScript parsing is done during {{glossary(\"compile time\")}} or whenever the {{glossary(\"parser\")}} is invoked, such as during a call to a method.\n\n## See also\n\n- [Parse](https://en.wikipedia.org/wiki/Parsing) on Wikipedia\n","slug":"9319f8e20d9345fa8dc30513e2118135","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T10:01:03.609Z","dateupdated":"2025-07-05T10:01:03.609Z","layout":"PostBanner"}