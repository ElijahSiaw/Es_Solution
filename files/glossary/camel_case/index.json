{"title":"Camel case","tag":"glossary/camel_case","post":"\n\n{{Sidebar(\"Glossary\")}}\n\n**Camel case** is a way of writing phrases without spaces, where the first letter of each word is capitalized, except for the first letter of the entire compound word, which may be either upper or lower case. The name comes from the similarity of the capital letters to the humps of a camel's back. It's often stylized as \"camelCase\" to remind the reader of its appearance.\n\nCamel casing is often used as a variable naming convention. The following variables are in camel case: {{domxref(\"console\")}}, {{jsxref(\"encodeURIComponent\")}}, {{jsxref(\"ArrayBuffer\")}}, and {{domxref(\"HTMLElement\")}}.\n\n<!-- cSpell:ignore XMLHTTP -->\n\nNote that if the phrase contains acronyms (such as `URI` and `HTML`), camel casing practices vary. Some prefer to keep all of them capitalized, such as `encodeURIComponent` above. This may sometimes lead to ambiguity with multiple consecutive acronyms, such as `XMLHTTPRequest`. Others prefer to only capitalize the first letter, as `XmlHttpRequest`. The actual global variable, {{domxref(\"XMLHttpRequest\")}}, uses a mix of both.\n\nWhen the first letter of the entire phrase is upper case, it is called _upper camel case_ or _Pascal case_. Otherwise, it is called _lower camel case_.\n\nCamel case is the most popular convention in JavaScript, Java, and various other languages.\n\n## See also\n\n- Related glossary terms:\n  - {{Glossary(\"Snake case\")}}\n  - {{Glossary(\"Kebab case\")}}\n- [typescript-eslint rule: `naming-convention`](https://typescript-eslint.io/rules/naming-convention/)\n","slug":"fb1641a1f372495cb58d56398e643c93","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T09:58:59.905Z","dateupdated":"2025-07-05T09:58:59.905Z","layout":"PostBanner"}