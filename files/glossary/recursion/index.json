{"title":"Recursion","tag":"glossary/recursion","post":"\n\n{{Sidebar(\"Glossary\")}}\n\nThe act of a function calling itself, recursion is used to solve problems that contain smaller sub-problems. A recursive function can receive two inputs: a base case (ends recursion) or a recursive case (resumes recursion).\n\n## Examples\n\n### Recursive function calls itself until condition met\n\nThe following Python code defines a function that takes a number, prints it, and then calls itself again with the number's value -1. It keeps going until the number is equal to 0, in which case it stops.\n\n```python\ndef recurse(x):\n   if x > 0:\n       print(x)\n       recurse(x - 1)\n\nrecurse(10)\n```\n\nThe output will look like this:\n\n```plain\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n```\n\n### Recursion is limited by stack size\n\nThe following code defines a function that returns the maximum size of the call stack available in the JavaScript runtime in which the code is run.\n\n```js\nconst getMaxCallStackSize = (i) => {\n  try {\n    return getMaxCallStackSize(++i);\n  } catch {\n    return i;\n  }\n};\n\nconsole.log(getMaxCallStackSize(0));\n```\n\n### Common usage examples\n\n```js\nconst factorial = (n) => {\n  if (n === 0) {\n    return 1;\n  }\n  return n * factorial(n - 1);\n};\nconsole.log(factorial(10));\n// 3628800\n```\n\n```js\nconst fibonacci = (n) => (n <= 2 ? 1 : fibonacci(n - 1) + fibonacci(n - 2));\nconsole.log(fibonacci(10));\n// 55\n```\n\n```js\nconst reduce = (fn, acc, [cur, ...rest]) =>\n  cur === undefined ? acc : reduce(fn, fn(acc, cur), rest);\nconsole.log(reduce((a, b) => a + b, 0, [1, 2, 3, 4, 5, 6, 7, 8, 9]));\n// 45\n```\n\n## See also\n\n- [Recursion (computer science)](<https://en.wikipedia.org/wiki/Recursion_(computer_science)>) on Wikipedia\n- [More details about recursion in JavaScript](/blog/Web/JavaScript/Guide/Functions#recursion)\n","slug":"6907b1b182fe400fb7ed87d0ff56a0f2","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T10:01:10.058Z","dateupdated":"2025-07-05T10:01:10.058Z","layout":"PostBanner"}