{"title":"Method","tag":"glossary/method","post":"\n\n{{Sidebar(\"Glossary\")}}\n\nA **method** is a {{glossary(\"function\")}} which is a {{glossary(\"property\")}} of an {{glossary(\"object\")}}. There are two kinds of methods: _instance methods_ which are built-in tasks performed by an object instance, or _{{Glossary(\"static method\", \"static methods\")}}_ which are tasks that are called directly on an object constructor.\n\n> [!NOTE]\n> In JavaScript functions themselves are objects, so, in that context, a method is actually an {{glossary(\"object reference\")}} to a function.\n\nWhen `F` is said to be a _method_ of `O`, it often means that `F` uses `O` as its [`this`](/blog/Web/JavaScript/Reference/Operators/this) binding. Function properties that do not have different behaviors based on their `this` value (or those that don't have a dynamic `this` binding at all â€” like [bound functions](/blog/Web/JavaScript/Reference/Global_Objects/Function/bind) and [arrow functions](/blog/Web/JavaScript/Reference/Functions/Arrow_functions)) may not be universally recognized as methods.\n\n## See also\n\n- [Method (computer programming)](<https://en.wikipedia.org/wiki/Method_(computer_programming)>) in Wikipedia\n- [Defining a method in JavaScript](/blog/Web/JavaScript/Reference/Functions/Method_definitions) (comparison of the traditional syntax and the new shorthand)\n- [List of JavaScript built-in methods](/blog/Web/JavaScript/Reference)\n- Related glossary terms:\n  - {{Glossary(\"function\")}}\n  - {{Glossary(\"object\")}}\n  - {{Glossary(\"property\")}}\n  - {{Glossary(\"static method\")}}\n","slug":"2140af92fd034d80a40cea8b803d561a","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T10:00:59.062Z","dateupdated":"2025-07-05T10:00:59.062Z","layout":"PostBanner"}