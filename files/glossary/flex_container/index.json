{"title":"Flex container","tag":"glossary/flex_container","post":"\n\n{{Sidebar(\"Glossary\")}}\n\nA {{glossary(\"flexbox\")}} layout is defined using the `flex` or `inline-flex` values of the `display` property on the parent item. This element then becomes a **flex container**, and each one of its children becomes a {{glossary(\"flex item\")}}.\n\nA value of `flex` causes the element to become a block level flex container, and `inline-flex` an inline level flex container. These values create a **flex formatting context** for the element, which is similar to a block formatting context in that floats will not intrude into the container, and the margins on the container will not collapse with those of the items.\n\n## See also\n\n### Property reference\n\n- {{cssxref(\"align-content\")}}\n- {{cssxref(\"align-items\")}}\n- {{cssxref(\"flex\")}}\n- {{cssxref(\"flex-direction\")}}\n- {{cssxref(\"flex-flow\")}}\n- {{cssxref(\"flex-wrap\")}}\n- {{cssxref(\"justify-content\")}}\n\n### Further reading\n\n- [Basic concepts of flexbox](/blog/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox)\n- [Aligning items in a flex container](/blog/Web/CSS/CSS_flexible_box_layout/Aligning_items_in_a_flex_container)\n- [Mastering wrapping of flex items](/blog/Web/CSS/CSS_flexible_box_layout/Mastering_wrapping_of_flex_items)\n- [CSS flexbox inspector: Examine flexbox layouts](https://firefox-source-docs.mozilla.org/devtools-user/page_inspector/how_to/examine_flexbox_layouts/index.html)\n","slug":"0c5caf899d534917a8e3843c2e218dcb","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T10:00:02.373Z","dateupdated":"2025-07-05T10:00:02.373Z","layout":"PostBanner"}