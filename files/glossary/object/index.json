{"title":"Object","tag":"glossary/object","post":"\n\n{{Sidebar(\"Glossary\")}}\n\nIn JavaScript, objects can be seen as a collection of properties. With the [object literal syntax](/blog/Web/JavaScript/Guide/Grammar_and_types#object_literals), a limited set of properties are initialized; then properties can be added and removed. Property values can be values of any type, including other objects, which enables building complex data structures. Properties are identified using _key_ values. A _key_ value is either a {{Glossary(\"String\", \"String value\")}} or a [Symbol value](/blog/Web/JavaScript/Reference/Global_Objects/Symbol).\n\nThere are two types of object properties: The [_data_ property](/blog/Web/JavaScript/Guide/Data_structures#data_property) and the [_accessor_ property](/blog/Web/JavaScript/Guide/Data_structures#accessor_property).\n\n> [!NOTE]\n> It's important to recognize it's accessor _property_ — not accessor _method_. We can give a JavaScript object class-_like_ accessors by using a function as a value — but that doesn't make the object a class.\n\n## See also\n\n- [Detailed explanation of JavaScript objects](/blog/Web/JavaScript/Guide/Data_structures#objects) in the [JavaScript data types and data structures](/blog/Web/JavaScript/Guide/Data_structures) article\n- {{jsxref(\"Object\")}} in the [JavaScript reference](/blog/Web/JavaScript/Reference)\n","slug":"c09fcc32eb3446bca1f2fb4dc41021ee","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T10:01:01.707Z","dateupdated":"2025-07-05T10:01:01.707Z","layout":"PostBanner"}