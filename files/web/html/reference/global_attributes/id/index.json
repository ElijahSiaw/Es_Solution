{"title":"HTML attribute: Id","tag":"web/html/reference/global_attributes/id","post":"\n\n{{Sidebar(\"web/html/reference/global_attributes\")}}\n\nThe **`id`** [global attribute](/blog/Web/HTML/Reference/Global_attributes) defines an identifier (ID) which must be unique in the whole document.\n\n{{InteractiveExample(\"HTML Demo: id\", \"tabbed-shorter\")}}\n\n```html interactive-example\n<p>A normal, boring paragraph. Try not to fall asleep.</p>\n\n<p id=\"exciting\">The most exciting paragraph on the page. One of a kind!</p>\n```\n\n```css interactive-example\n#exciting {\n  background: linear-gradient(to bottom, #ffe8d4, #f69d3c);\n  border: 1px solid #696969;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 1px black;\n}\n\n#exciting:before {\n  content: \"ℹ️\";\n  margin-right: 5px;\n}\n```\n\n## Syntax\n\nAn ID attribute's value must not contain [ASCII whitespace](/blog/Glossary/Whitespace#in_html) characters. Browsers treat non-conforming IDs that contain whitespace as if the whitespace is part of the ID. In contrast to the [`class`](/blog/Web/HTML/Reference/Global_attributes/class) attribute, which allows space-separated values, elements can only have one single ID value.\n\nTechnically, the value for an ID attribute may contain any other Unicode character. However, when used in CSS selectors, either from JavaScript using APIs like {{domxref(\"Document.querySelector()\")}} or in CSS stylesheets, ID attribute values must be valid [CSS identifiers](/blog/Web/CSS/ident). This means that if an ID attribute value is not a valid CSS identifier (for example, `my?id` or `1234`) then it must be escaped before being used in a selector, either using the {{domxref(\"CSS.escape_static\", \"CSS.escape()\")}} method or [manually](/blog/Web/CSS/ident#escaping_characters).\n\nFor this reason, it's recommended that developers choose values for ID attributes that are valid CSS identifiers that don't require escaping.\n\nAlso, not all valid ID attribute values are valid JavaScript identifiers. For example, `1234` is a valid attribute value but not a valid JavaScript identifier. This means that the value is not a valid variable name, so you can't access the element using code like `window.1234`. However, you can access it using `window[\"1234\"]`.\n\n## Description\n\nThe purpose of the ID attribute is to identify a single element when linking (using a [fragment identifier](/blog/Web/URI/Reference/Fragment)), scripting, or styling (with {{glossary(\"CSS\")}}).\n\nElements with ID attributes are available as global properties. The property name is the ID attribute, and the property value is the element. For example, given markup like:\n\n```html\n<p id=\"preamble\"></p>\n```\n\nYou could access the paragraph element in JavaScript using code like:\n\n```js\nconst content = window.preamble.textContent;\n```\n\n> [!WARNING]\n> Relying on this behavior is dangerous and discouraged. It can lead to unexpected conflicts with some existing or future APIs in the browser. For example, if browsers introduce a new global property named `preamble`, then the same code will no longer be able to access the HTML element. Use `document.getElementById()` or `document.querySelector()` instead.\n\n## Specifications\n\n{{Specifications}}\n\n## Browser compatibility\n\n{{Compat}}\n\n## See also\n\n- All [global attributes](/blog/Web/HTML/Reference/Global_attributes).\n- {{domxref(\"Element.id\")}} that reflects this attribute.\n- The {{domxref(\"Document.getElementById\")}} method.\n- CSS [ID selectors](/blog/Web/CSS/ID_selectors).\n","slug":"d7d38517d988462188babd9dddd64ce7","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-06T10:19:52.573Z","dateupdated":"2025-07-06T10:19:52.573Z","layout":"PostBanner"}