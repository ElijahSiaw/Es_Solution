{"title":"Tr","tag":"html/reference/elements/tr","post":"\n\n{{Sidebar(\"html/reference/elements\")}}\n\nThe **`<tr>`** [HTML](/blog/Web/HTML) element defines a row of cells in a table. The row's cells can then be established using a mix of {{HTMLElement(\"td\")}} (data cell) and {{HTMLElement(\"th\")}} (header cell) elements.\n\n{{InteractiveExample(\"HTML Demo: &lt;tr&gt;\", \"tabbed-taller\")}}\n\n```html interactive-example\n<table>\n  <caption>\n    Alien football stars\n  </caption>\n  <tr>\n    <th scope=\"col\">Player</th>\n    <th scope=\"col\">Gloobles</th>\n    <th scope=\"col\">Za'taak</th>\n  </tr>\n  <tr>\n    <th scope=\"row\">TR-7</th>\n    <td>7</td>\n    <td>4,569</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">Khiresh Odo</th>\n    <td>7</td>\n    <td>7,223</td>\n  </tr>\n  <tr>\n    <th scope=\"row\">Mia Oolong</th>\n    <td>9</td>\n    <td>6,219</td>\n  </tr>\n</table>\n```\n\n```css interactive-example\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 10px;\n}\n\nth[scope=\"col\"] {\n  background-color: #505050;\n  color: #fff;\n}\n\nth[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n\ntd {\n  text-align: center;\n}\n\ntr:nth-of-type(even) {\n  background-color: #eee;\n}\n\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n  font-family: sans-serif;\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n}\n\ncaption {\n  caption-side: bottom;\n  padding: 10px;\n}\n```\n\n## Attributes\n\nThis element includes the [global attributes](/blog/Web/HTML/Reference/Global_attributes).\n\n### Deprecated attributes\n\nThe following attributes are deprecated and should not be used. They are documented below for reference when updating existing code and for historical interest only.\n\n- `align` {{deprecated_inline}}\n\n  - : Specifies the horizontal alignment of each row cell. The possible {{Glossary(\"enumerated\")}} values are `left`, `center`, `right`, `justify`, and `char`. When supported, the `char` value aligns the textual content on the character defined in the [`char`](#char) attribute and on offset defined by the [`charoff`](#charoff) attribute. Use the {{cssxref(\"text-align\")}} CSS property instead, as this attribute is deprecated.\n\n- `bgcolor` {{deprecated_inline}}\n\n  - : Defines the background color of each row cell. The value is an HTML color; either a [6-digit hexadecimal RGB code](/blog/Web/CSS/hex-color), prefixed by a `#`, or a [color keyword](/blog/Web/CSS/named-color). Other CSS {{cssxref(\"color_value\", \"&lt;color&gt;\")}} values are not supported. Use the {{cssxref(\"background-color\")}} CSS property instead, as this attribute is deprecated.\n\n- `char` {{deprecated_inline}}\n\n  - : Specifies the alignment of the content to a character of each row cell. Typical values for this include a period (`.`) when attempting to align numbers or monetary values. If [`align`](#align) is not set to `char`, this attribute is ignored.\n\n- `charoff` {{deprecated_inline}}\n\n  - : Specifies the number of characters to offset the row cell content from the alignment character specified by the [`char`](#char) attribute.\n\n- `valign` {{deprecated_inline}}\n\n  - : Specifies the vertical alignment of each row cell. The possible {{Glossary(\"enumerated\")}} values are `baseline`, `bottom`, `middle`, and `top`. Use the {{cssxref(\"vertical-align\")}} CSS property instead, as this attribute is deprecated.\n\n## Usage notes\n\n- The `<tr>` element is valid as a child of a {{HTMLElement(\"thead\")}}, {{HTMLElement(\"tbody\")}}, or {{HTMLElement(\"tfoot\")}} element only.\n- If the `<tr>` is placed as a direct child of its parent {{HTMLElement(\"table\")}} element, the `<tbody>` parent is implied and browsers will add the `<tbody>` to the markup.\n- The implied `<tbody>` parent is only supported if the `<table>` otherwise has no child `<tbody>` elements, and only if the `<tr>` is included after any {{HTMLElement(\"caption\")}}, {{HTMLElement(\"colgroup\")}}, and `<thead>` elements.\n- The CSS pseudo-classes {{cssxref(\":nth-of-type\")}}, {{cssxref(\":first-of-type\")}}, and {{cssxref(\":last-of-type\")}} are often useful for selecting the desired set of rows and their data and header cells ({{HTMLElement(\"td\")}} and {{HTMLElement(\"th\")}} elements).\n- When a `<tr>` is included as a direct child of the `<table>`, as the browser adds a `<tbody>` to the markup, CSS selectors such as `table > tr` may not work as expected or at all.\n\n## Examples\n\nSee {{HTMLElement(\"table\")}} for a complete table example introducing common standards and best practices.\n\n### Basic row setup\n\nThis example demonstrates a table with four rows and three columns, where the first column contains headers for the row data cells.\n\n#### HTML\n\nFour `<tr>` elements are used to create four table rows. Each row contains three cells - one header cell ({{HTMLElement(\"th\")}}) and two data cells ({{HTMLElement(\"td\")}}) - creating three columns. The [`scope`](/blog/Web/HTML/Reference/Elements/th#scope) attribute set on each header cell specifies which cells they relate to, which in this example is all data cells within the `row`.\n\n```html\n<table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">A</th>\n      <td>Alfa</td>\n      <td>AL fah</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">B</th>\n      <td>Bravo</td>\n      <td>BRAH voh</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">C</th>\n      <td>Charlie</td>\n      <td>CHAR lee</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">D</th>\n      <td>Delta</td>\n      <td>DELL tah</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### CSS\n\nThe CSS {{cssxref(\":nth-of-type\")}} pseudo-class is used to select every `odd` row and set the {{cssxref(\"background-color\")}} of those rows to a slightly darker tone, creating a so-called \"zebra stripe\" effect. This alternating background makes the rows of data in the table easier to parse and readâ€”imagine having many rows and columns and trying to find some data in a particular row. In addition, the row header cells ({{HTMLElement(\"th\")}} elements) are highlighted with a {{cssxref(\"background-color\")}} to distinguish them from the data cells ({{HTMLElement(\"td\")}} elements).\n\n```css\ntr:nth-of-type(odd) {\n  background-color: #eee;\n}\n\ntr th[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n```\n\n```css hidden\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n  font-family: sans-serif;\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 10px;\n}\n```\n\n#### Result\n\n{{EmbedLiveSample(\"Basic_row_setup\", 650, 140)}}\n\n### Header row\n\nThis example extends the basic table from the [previous example](#basic_row_setup) by adding a header row as the first row of the table.\n\n#### HTML\n\nAn additional table row (`<tr>`) is added as the first row of the table with column header cells ({{HTMLElement(\"th\")}}) providing a header for each column. We put this row in a {{HTMLElement(\"thead\")}} grouping element to indicate this is the header of the table. The [`scope`](/blog/Web/HTML/Reference/Elements/th#scope) attribute is added to each header cell (`<th>`) within this head row to explicitly specify that each header cell relates to all the cells within its own column, even though those cells are in the {{HTMLElement(\"tbody\")}}.\n\n```html\n<table>\n  <thead>\n    <tr>\n      <th scope=\"col\">Symbol</th>\n      <th scope=\"col\">Code word</th>\n      <th scope=\"col\">Pronunciation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">A</th>\n      <td>Alfa</td>\n      <td>AL fah</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">B</th>\n      <td>Bravo</td>\n      <td>BRAH voh</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">C</th>\n      <td>Charlie</td>\n      <td>CHAR lee</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">D</th>\n      <td>Delta</td>\n      <td>DELL tah</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### CSS\n\nThe CSS is nearly unchanged from the [previous example](#basic_row_setup), except for some additional styling to highlight the \"header row\" so that the headers of the columns stand out from the other cells.\n\n```css\ntr:nth-of-type(odd) {\n  background-color: #eee;\n}\n\ntr th[scope=\"col\"] {\n  background-color: #505050;\n  color: #fff;\n}\n\ntr th[scope=\"row\"] {\n  background-color: #d6ecd4;\n}\n```\n\n```css hidden\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n  font-family: sans-serif;\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 8px 10px;\n}\n```\n\n#### Result\n\n{{EmbedLiveSample(\"Header_row\", 650, 170)}}\n\n### Sorting rows\n\nThere are no native methods for sorting the rows (`<tr>` elements) of a {{HTMLElement(\"table\")}}. But using {{jsxref(\"Array.prototype.sort()\")}}, {{domxref(\"Node.removeChild\")}}, and {{domxref(\"Node.appendChild\")}}, a custom `sort()` function can be implemented in JavaScript to sort an {{domxref(\"HTMLCollection\")}} of `<tr>` elements.\n\n#### HTML\n\nA {{HTMLElement(\"tbody\")}} element is used in this basic table to mark the body section of the table and to include three rows (`<tr>` elements) with data ({{HTMLElement(\"td\")}} elements), creating one column with numbers in descending order.\n\n```html\n<table>\n  <tbody>\n    <tr>\n      <td>3</td>\n    </tr>\n    <tr>\n      <td>2</td>\n    </tr>\n    <tr>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### JavaScript\n\nIn the JavaScript code below, the created `sort()` function is attached to the {{HTMLElement(\"tbody\")}} element so that it sorts the table cells in order of increasing value and updates the display accordingly.\n\n```js\nHTMLTableSectionElement.prototype.sort = function (cb) {\n  Array.from(this.rows)\n    .sort(cb)\n    .forEach((e) => this.appendChild(this.removeChild(e)));\n};\n\ndocument\n  .querySelector(\"table\")\n  .tBodies[0].sort((a, b) => a.textContent.localeCompare(b.textContent));\n```\n\n```css hidden\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n  font-family: sans-serif;\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n}\n\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 4px 8px;\n}\n```\n\n#### Result\n\n{{EmbedLiveSample('Sorting_rows', '650', '80')}}\n\n### Sorting rows with a click on header cells\n\nThis example extends the basic table from the [previous example](#sorting_rows) by making the sorting interactive and independent for multiple columns.\n\n#### HTML\n\nAn additional data cell ({{HTMLElement(\"td\")}} element) is added to each row (`<tr>` element) within the table body ({{HTMLElement(\"tbody\")}} element) to create a second column with letters in ascending order. Using the {{HTMLElement(\"thead\")}} element, a head section is added before the body section to introduce a head row with table header cells ({{HTMLElement(\"th\")}} element). These header cells are used in the JavaScript code below to make them clickable and then to perform the corresponding sorting when activated per click.\n\n```html\n<table>\n  <thead>\n    <tr>\n      <th>Numbers</th>\n      <th>Letters</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3</td>\n      <td>A</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>B</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>C</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n#### JavaScript\n\nA click event handler is added to each table header ({{HTMLElement(\"th\")}} element) of each {{HTMLElement(\"table\")}} in the {{domxref(\"HTMLDocument\", \"document\")}}; it sorts all the rows (`<tr>` elements) of the {{HTMLElement(\"tbody\")}} based on the contents of the data cells ({{HTMLElement(\"td\")}} elements) contained in the rows.\n\n> [!NOTE]\n> This solution assumes that the {{HTMLElement(\"td\")}} elements are populated by raw text with no descendant elements.\n\n```js\nconst allTables = document.querySelectorAll(\"table\");\n\nfor (const table of allTables) {\n  const tBody = table.tBodies[0];\n  const rows = Array.from(tBody.rows);\n  const headerCells = table.tHead.rows[0].cells;\n\n  for (const th of headerCells) {\n    const cellIndex = th.cellIndex;\n\n    th.addEventListener(\"click\", () => {\n      rows.sort((tr1, tr2) => {\n        const tr1Text = tr1.cells[cellIndex].textContent;\n        const tr2Text = tr2.cells[cellIndex].textContent;\n        return tr1Text.localeCompare(tr2Text);\n      });\n\n      tBody.append(...rows);\n    });\n  }\n}\n```\n\n```css hidden\ntable {\n  border-collapse: collapse;\n  border: 2px solid rgb(140 140 140);\n  font-family: sans-serif;\n  font-size: 0.8rem;\n  letter-spacing: 1px;\n}\n\nth,\ntd {\n  border: 1px solid rgb(160 160 160);\n  padding: 4px 8px;\n}\n\nth {\n  background-color: #505050;\n  color: #fff;\n  cursor: pointer;\n}\n```\n\n#### Result\n\n{{EmbedLiveSample('Sorting_rows_with_a_click_on_header_cells', '650', '100')}}\n\n> [!NOTE]\n> To be usable and accessible, the header cell of each sortable column must be identifiable as a sorting button and each must define whether the column is currently sorted in ascending or descending order visually and with the [`aria-sort`](/blog/Web/Accessibility/ARIA/Reference/Attributes/aria-sort) attribute. See the [ARIA Authoring Practices Guide](https://www.w3.org/WAI/ARIA/apg/)'s [sortable table example](https://www.w3.org/WAI/ARIA/apg/patterns/table/examples/sortable-table/) for more information.\n\n## Technical summary\n\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">\n        <a href=\"/blog/Web/HTML/Guides/Content_categories\"\n          >Content categories</a\n        >\n      </th>\n      <td>None</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Permitted content</th>\n      <td>\n        Zero or more {{HTMLElement(\"td\")}} and/or\n        {{HTMLElement(\"th\")}} elements;\n        {{Glossary(\"script-supporting element\", \"script-supporting elements\")}}\n        ({{HTMLElement(\"script\")}} and\n        {{HTMLElement(\"template\")}}) are also allowed.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Tag omission</th>\n      <td>\n        Start tag is mandatory. End tag may be omitted if the\n        <code>&lt;tr&gt;</code> element is immediately followed by a\n        <code>&lt;tr&gt;</code> element, or if the row is the last element\n        in its parent table group ({{HTMLElement(\"thead\")}},\n        {{HTMLElement(\"tbody\")}} or {{HTMLElement(\"tfoot\")}})\n        element.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Permitted parents</th>\n      <td>\n        {{HTMLElement(\"table\")}} (only if the table has no child\n        {{HTMLElement(\"tbody\")}} element, and even then only after any\n        {{HTMLElement(\"caption\")}},\n        {{HTMLElement(\"colgroup\")}}, and\n        {{HTMLElement(\"thead\")}} elements); otherwise, the parent must\n        be a {{HTMLElement(\"thead\")}}, {{HTMLElement(\"tbody\")}} or\n        {{HTMLElement(\"tfoot\")}} element.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Implicit ARIA role</th>\n      <td>\n        <code\n          ><a href=\"/blog/Web/Accessibility/ARIA/Reference/Roles/row_role\"\n            >row</a\n          ></code\n        >\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Permitted ARIA roles</th>\n      <td>Any</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">DOM interface</th>\n      <td>{{DOMxRef(\"HTMLTableRowElement\")}}</td>\n    </tr>\n  </tbody>\n</table>\n\n## Specifications\n\n{{Specifications}}\n\n## Browser compatibility\n\n{{Compat}}\n\n## See also\n\n- [Learn: HTML table basics](/blog/Learn_web_development/Core/Structuring_content/HTML_table_basics)\n- {{HTMLElement(\"caption\")}}, {{HTMLElement(\"col\")}}, {{HTMLElement(\"colgroup\")}}, {{HTMLElement(\"table\")}}, {{HTMLElement(\"tbody\")}}, {{HTMLElement(\"td\")}}, {{HTMLElement(\"tfoot\")}}, {{HTMLElement(\"th\")}}, {{HTMLElement(\"thead\")}}: Other table-related elements\n- {{cssxref(\"background-color\")}}: CSS property to set the background color of each row cell\n- {{cssxref(\"border\")}}: CSS property to control borders of row cells\n- {{cssxref(\"text-align\")}}: CSS property to horizontally align each row cell content\n- {{cssxref(\"vertical-align\")}}: CSS property to vertically align each row cell content\n- {{cssxref(\":nth-of-type\")}}, {{cssxref(\":first-of-type\")}}, {{cssxref(\":last-of-type\")}}: CSS pseudo-classes to select the desired row cells\n","slug":"ca2ad74c64a6449db99cc4afc986863b","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T19:05:57.307Z","dateupdated":"2025-07-05T19:05:57.307Z","layout":"PostBanner"}