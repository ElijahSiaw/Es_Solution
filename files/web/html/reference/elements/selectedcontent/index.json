{"title":"Selectedcontent","tag":"html/reference/elements/selectedcontent","post":"\n\n{{Sidebar(\"html/reference/elements\")}}{{SeeCompatTable}}{{non-standard_header}}\n\nThe **`<selectedcontent>`** [HTML](/blog/Web/HTML) element can be used to display the content of the currently selected `<option>` inside a closed `<select>` element.\n\n## Attributes\n\nThe `<selectedcontent>` element includes the [global attributes](/blog/Web/HTML/Reference/Global_attributes), but they will essentially be ignored because when used correctly as a child of a select button, the element is rendered [inert](/blog/Web/HTML/Reference/Global_attributes/inert).\n\nThe select button and all its content are inert by default so that if interactive children (for example, links or buttons) are included inside it, it will still be treated like a single button for interaction purposes.\n\nNo other attributes are defined on `<selectedcontent>`.\n\n## Description\n\nWhen creating a [Customizable select element](/blog/Learn_web_development/Extensions/Forms/Customizable_select), you can include the `<selectedcontent>` element inside a {{htmlelement(\"button\")}} element, which in turn needs to be the first child of the `<select>` element:\n\n```html\n<select>\n  <button>\n    <selectedcontent></selectedcontent>\n  </button>\n\n  ...\n</select>\n```\n\n`<selectedcontent>` contains a clone of a {{htmlelement(\"select\")}} element's currently-selected {{htmlelement(\"option\")}} element content, created using {{domxref(\"Node.cloneNode\", \"cloneNode()\")}} under the hood.\n\nAny subsequent `<select>` content will be included in the drop-down picker.\n\nWhenever the `<select>` element's selected `<option>` switches from one option to another, the `<selectedcontent>` element's content is removed and replaced by a new cloned copy of the DOM structure of the newly selected `<option>`, which is created using {{domxref(\"Node.cloneNode\", \"cloneNode()\")}}.\nDynamic modifications to the selected `<option>` element's content made after the `<select>` element has been created are not automatically cloned to the `<selectedcontent>` element, and must be manually updated by the developer.\n\n> [!WARNING]\n> In particular, this may cause issues with sites that use popular front-end JavaScript frameworks where {{htmlelement(\"option\")}} elements are dynamically updated after creation, as these updates will not be cloned to the `<selectedcontent>` element.\n\n## Styling with CSS\n\nIt is useful to be able to target the currently-selected `<option>` element's content as it appears inside the select button with CSS styles, without affecting the styling of the content as it appears inside the picker.\n\nFor example, your `<option>` elements may contain icons, images, or even videos. This content might look nice inside the picker, but could cause the select button to increase in size, look untidy, and affect the surrounding layout.\n\nThis could be fixed by hiding the problem content when it is contained inside `<selectedcontent>`. For example:\n\n```css\nselectedcontent img {\n  display: none;\n}\n```\n\n> [!NOTE]\n> If the `<button>` and/or `<selectedcontent>` elements are not included inside the `<select>` markup, the browser will place the selected option content inside the select button implicitly, but this targeting will not be possible.\n\n## Examples\n\nYou can see a full example that includes the `<selectedcontent>` element in our [Customizable select elements](/blog/Learn_web_development/Extensions/Forms/Customizable_select) guide.\n\n## Technical summary\n\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">\n        <a href=\"/blog/Web/HTML/Guides/Content_categories\"\n          >Content categories</a\n        >\n      </th>\n      <td>\n       None\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Permitted content</th>\n      <td>\n        Mirrors content from the selected {{htmlelement(\"option\")}}.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Tag omission</th>\n      <td>None, both the starting and ending tag are mandatory.</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Permitted parents</th>\n      <td>\n        A {{htmlelement(\"button\")}} element that is the first child of a {{htmlelement(\"select\")}} element.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Implicit ARIA role</th>\n      <td>\n        None\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Permitted ARIA roles</th>\n      <td>\n        None\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">DOM interface</th>\n      <td>{{domxref(\"HTMLSelectedContentElement\")}}</td>\n    </tr>\n  </tbody>\n</table>\n\n## Specifications\n\nNot currently part of a specification. See https://github.com/whatwg/html/pull/10633 for the relevant specification PR.\n\n## Browser compatibility\n\n{{Compat}}\n\n## See also\n\n- The {{HTMLElement(\"select\")}} element\n- The {{HTMLElement(\"option\")}} element\n- The {{HTMLElement(\"optgroup\")}} element\n- [Customizable select elements](/blog/Learn_web_development/Extensions/Forms/Customizable_select)\n","slug":"525665bace254341974fed50b8408814","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-05T19:06:15.288Z","dateupdated":"2025-07-05T19:06:15.288Z","layout":"PostBanner"}