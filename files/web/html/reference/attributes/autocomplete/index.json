{"title":"HTML attribute: Autocomplete","tag":"web/html/reference/attributes/autocomplete","post":"\n\n{{Sidebar(\"web/html/reference/attributes\")}}\n\nThe HTML `autocomplete` attribute lets web developers specify what if any permission the {{Glossary(\"user agent\")}} has to provide automated assistance in filling out form field values, as well as guidance to the browser as to the type of information expected in the field.\n\nIt is available on {{HTMLElement(\"input\")}} elements that take a text or numeric value as input, {{HTMLElement(\"textarea\")}} elements, {{HTMLElement(\"select\")}} elements, and {{HTMLElement(\"form\")}} elements.\n\n{{InteractiveExample(\"HTML Demo: autocomplete\", \"tabbed-shorter\")}}\n\n```html interactive-example\n<label for=\"firstName\">First Name:</label>\n<input name=\"firstName\" id=\"firstName\" type=\"text\" autocomplete=\"given-name\" />\n\n<label for=\"lastName\">Last Name:</label>\n<input name=\"lastName\" id=\"lastName\" type=\"text\" autocomplete=\"family-name\" />\n\n<label for=\"email\">Email:</label>\n<input name=\"email\" id=\"email\" type=\"email\" autocomplete=\"off\" />\n```\n\n```css interactive-example\nlabel {\n  display: block;\n  margin-top: 1rem;\n}\n```\n\n## Description\n\nThe `autocomplete` attribute provides a hint to the user agent specifying how to, or indeed whether to, prefill a form control. The attribute value is either the keyword `off` or `on`, or an ordered list of space-separated tokens.\n\n```html\n<input autocomplete=\"off\" />\n<input autocomplete=\"on\" />\n<input autocomplete=\"shipping street-address\" />\n<input autocomplete=\"section-user1 billing postal-code\" />\n```\n\nIf an {{HTMLElement(\"input\")}}, {{HTMLElement(\"select\")}} or {{HTMLElement(\"textarea\")}} element has no `autocomplete` attribute, the browser will use the [`autocomplete` attribute of the element's **owning form**](/blog/Web/HTML/Reference/Elements/form#autocomplete). The owning form is either the {{HTMLElement(\"form\")}} matching the `id` specified by the [`form`](/blog/Web/HTML/Reference/Elements/input#form) attribute of the element (if present) or, more commonly, the `<form>` the element is nested in.\n\n> [!NOTE]\n> In order to provide autocompletion, user-agents might require `<input>`/`<select>`/`<textarea>` elements to:\n>\n> 1. Have a `name` and/or `id` attribute\n> 2. Be descendants of a `<form>` element\n> 3. Be owned by a form with a {{HTMLElement(\"input/submit\", \"submit\")}} button\n\nIf the same list of tokens is used in more than one form control, the user-agent will autocomplete all occurrences of the same `autocomplete` value with the same data value.\n\nSome tokens may be used more than once with potentially different expected values, such as the `zip-code` token in a form that contains both shipping and billing addresses. Including multiple different tokens in a space-separated list causes the associated form controls to be given unique autocomplete values: in this case, `autocomplete=\"shipping zip-code\"` and `autocomplete=\"billing zip-code\"`.\n\nSome autocomplete values may need to be re-used multiple times. For example, a form may contain multiple shipping addresses and therefore multiple occurrences of `\"shipping zip-code\"` while still expecting different values. To make the autocomplete value unique in these cases, the first token in the space-separated list of tokens can be a `section-*` token, where the token's first eight characters are always the string \"section-\", followed by an alphanumeric string. All form fields given the `section-*` token with the same alphanumeric string belong to the same **named group**.\n\nIf including the `autocomplete` attribute on {{HTMLElement(\"input/hidden\", \"hidden\")}} input elements (`<input type=\"hidden\">`), its value must be an ordered list of space-separated tokens; the `on` and `off` keywords are not allowed.\n\nThe source of the suggested values is generally up to the browser; typically values come from past values entered by the user, but they may also come from pre-configured values. For instance, a browser might let the user save their name, address, phone number, and email addresses for autocomplete purposes. The browser may also offer the ability to save encrypted credit card information, for autocompletion following an authentication procedure.\n\n> [!NOTE]\n> The `autocomplete` attribute also controls whether Firefox will — unlike other browsers — [persist the dynamic disabled state and (if applicable) dynamic checkedness](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of an `<input>` element, `<textarea>` element, or entire `<form>` across page loads. The persistence feature is enabled by default. Setting the value of the `autocomplete` attribute to `off` disables this feature. This works even when the `autocomplete` attribute would normally not apply by virtue of its `type`. See [Firefox bug 654072](https://bugzil.la/654072).\n\n## Value\n\nThe attribute value is either the keyword `off` or `on`, or a space-separated `<token-list>` that describes the meaning of the autocompletion value.\n\n- `off`\n\n  - : The browser is not permitted to automatically enter or select a value for this field. It is possible that the document or application provides its own autocomplete feature, or that security concerns require that the field's value not be automatically entered.\n\n    > [!NOTE]\n    > In most modern browsers, setting `autocomplete` to `\"off\"` will not prevent a password manager from asking the user if they would like to save username and password information, or from automatically filling in those values in a site's login form. See [Managing autofill for login fields](/blog/Web/Security/Practical_implementation_guides/Turning_off_form_autocompletion#managing_autofill_for_login_fields).\n\n- `on`\n\n  - : The browser is allowed to automatically complete the input. No guidance is provided as to the type of data expected in the field, so the browser may use its own judgement.\n\n- `<token-list>`\n\n  - : An ordered set of [space-separated tokens](#token_list_tokens) consisting of autofill detail tokens preceded by optional sectioning and either billing or shipping grouping tokens. Phone numbers, email addresses, and messaging protocol tokens are preceded by a token identifying the type of recipient.\n\nSee the [WHATWG Standard](https://html.spec.whatwg.org/multipage/forms.html#autofill) for more detailed information.\n\n### Token list tokens\n\nThe `<token-list>` options include, in order:\n\n1. [Group naming token](#named_groups)\n2. [Grouping identifier](#grouping_identifier)\n3. [Detail tokens](#detail_tokens)\n4. [Web authorization](#web_authorization_token)\n\n#### Named groups\n\nTo create a named group of form fields, the optional `section-*` token can be used. If present, this token must be the first token in the space-separated list of tokens.\n\n- `section-*`\n  - : Defines the name for a group of form controls. A token whose first eight characters are the string \"section-\", case-insensitive, followed by additional characters. All form controls that start with the same token belong to the named group.\n\n#### Grouping identifier\n\nAn optional `shipping` or `billing` grouping identifier\n\n- `shipping`\n  - : The field identified by subsequent tokens is part of the shipping address or contact information\n- `billing`\n  - : The field identified by subsequent tokens is part of the billing address or contact information\n\n#### Detail tokens\n\nEach space-separated detail token list includes either a recipient type with digital contact information, in that order, or a space-separated token list of other tokens.\n\n##### Recipient type\n\nThe tokens that identify the type of recipient include:\n\n- `home`\n  - : The contact type identified by subsequent tokens is for contacting the recipient at their residence.\n- `work`\n  - : The contact type identified by subsequent tokens is for contacting the recipient at their work.\n- `mobile`\n  - : The contact type identified by subsequent tokens is for contacting the recipient regardless of location.\n- `fax`\n  - : The recipient identified by subsequent tokens is for a fax machine.\n- `page`\n  - : The recipient identified by subsequent tokens is for a pager or beeper.\n\n##### Digital contact tokens\n\nThe token or group of tokens for telephone numbers or a number's component parts, phone extensions, email addresses, or instant messaging protocols.\n\n- `tel`\n\n  - : A full telephone number, including the country code. If you need to break the phone number up into its components, you can use these values for those fields:\n    - `tel-country-code`\n      - : The country code, such as \"1\" for the United States, Canada, and other areas in North America and parts of the Caribbean.\n    - `tel-national`\n      - : The entire phone number without the country code component, including a country-internal prefix. For the phone number \"1-855-555-6502\", this field's value would be \"855-555-6502\".\n    - `tel-area-code`\n      - : The area code, with any country-internal prefix applied if appropriate.\n    - `tel-local`\n      - : The phone number without the country or area code. This can be split further into two parts, for phone numbers which have an exchange number and then a number within the exchange. For the phone number \"555-6502\", use `tel-local-prefix` for \"555\" and `tel-local-suffix` for \"6502\".\n\n- `tel-extension`\n  - : A telephone extension code within the phone number, such as a room or suite number in a hotel or an office extension in a company.\n- `email`\n  - : An email address.\n- `impp`\n  - : A URL for an instant messaging protocol endpoint, such as `xmpp:username@example.net`.\n\n##### Other tokens\n\nWhen the form field is not a phone number, email address, or instant messaging protocol, the space-separated list of tokens is not preceded by a contact type:\n\n- `name`\n\n  - : The field expects the value to be a person's full name. Using `name` rather than breaking the name down into its components is generally preferred because it avoids dealing with the wide diversity of human names and how they are structured; however, you can use the following `autocomplete` values if you do need to break the name down into its components:\n\n    - `honorific-prefix`\n      - : The prefix or title, such as \"Mrs.\", \"Mr.\", \"Miss\", \"Ms.\", \"Dr.\", or \"Mlle.\".\n    - `given-name`\n      - : The given (or \"first\") name.\n    - `additional-name`\n      - : The middle name.\n    - `family-name`\n      - : The family (or \"last\") name.\n    - `honorific-suffix`\n      - : The suffix, such as \"Jr.\", \"B.Sc.\", \"PhD.\", \"MBASW\", or \"IV\".\n    - `nickname`\n      - : A nickname or handle.\n\n- `username`\n  - : A username or account name.\n- `new-password`\n  - : A new password. When creating a new account or changing passwords, this should be used for an \"Enter your new password\" or \"Confirm new password\" field, as opposed to a general \"Enter your current password\" field that might be present. This may be used by the browser both to avoid accidentally filling in an existing password and to offer assistance in creating a secure password.\n- `current-password`\n  - : The user's current password.\n- `one-time-code`\n  - : A one-time password (OTP) for verifying user identity that is used as an additional factor in a sign-in flow.\n    Most commonly this is a code received via some out-of-channel mechanism, such as SMS, email, or authenticator application.\n- `organization-title`\n  - : A job title, or the title a person has within an organization, such as \"Senior Technical Writer\", \"President\", or \"Assistant Troop Leader\".\n- `organization`\n  - : A company or organization name, such as \"Acme Widget Company\" or \"Girl Scouts of America\".\n- `street-address`\n  - : A street address. This can be multiple lines of text, and should fully identify the location of the address within its second administrative level (typically a city or town), but should not include the city name, ZIP or postal code, or country name.\n    - `address-line1`, `address-line2`, `address-line3`\n      - : Each individual line of the street address. These should only be present if the `street-address` is not present.\n- `address-level4`\n  - : The finest-grained [administrative level](#administrative_levels_in_addresses), in addresses which have four levels.\n- `address-level3`\n  - : The third [administrative level](#administrative_levels_in_addresses), in addresses with at least three administrative levels.\n- `address-level2`\n  - : The second [administrative level](#administrative_levels_in_addresses), in addresses with at least two of them. In countries with two administrative levels, this would typically be the city, town, village, or other locality in which the address is located.\n- `address-level1`\n  - : The first [administrative level](#administrative_levels_in_addresses) in the address. This is typically the province in which the address is located. In the United States, this would be the state. In Switzerland, the canton. In the United Kingdom, the county.\n- `country`\n  - : A country or territory code.\n- `country-name`\n  - : A country or territory name.\n- `postal-code`\n\n  - : A postal code (in the United States, this is the ZIP code).\n\n- `cc-name`\n  - : The full name as printed on or associated with a payment instrument such as a credit card. Using a full name field is preferred, typically, over breaking the name into pieces.\n    - `cc-given-name`\n      - : A given (first) name as given on a payment instrument like a credit card.\n    - `cc-additional-name`\n      - : A middle name as given on a payment instrument or credit card.\n    - `cc-family-name`\n      - : A family name, as given on a credit card.\n- `cc-number`\n  - : A credit card number or other number identifying a payment method, such as an account number.\n- `cc-exp`\n  - : A payment method expiration date, typically in the form \"MM/YY\" or \"MM/YYYY\".\n    - `cc-exp-month`\n      - : The month in which the payment method expires.\n    - `cc-exp-year`\n      - : The year in which the payment method expires.\n- `cc-csc`\n  - : The security code for the payment instrument; on credit cards, this is the 3-digit verification number on the back of the card.\n- `cc-type`\n  - : The type of payment instrument (such as \"Visa\" or \"Master Card\").\n- `transaction-currency`\n  - : The currency in which the transaction is to take place.\n- `transaction-amount`\n  - : The amount, given in the currency specified by `transaction-currency`, of the transaction, for a payment form.\n- `language`\n  - : A preferred language, given as a valid [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag).\n- `bday`\n  - : A birth date, as a full date.\n    - `bday-day`\n      - : The day of the month of a birth date.\n    - `bday-month`\n      - : The month of the year of a birth date.\n    - `bday-year`\n      - : The year of a birth date.\n- `sex`\n  - : A gender identity (such as \"Female\", \"Fa'afafine\", \"Hijra\", \"Male\", \"Nonbinary\"), as freeform text without newlines.\n- `url`\n  - : A URL, such as a home page or company website address as appropriate given the context of the other fields in the form.\n- `photo`\n  - : The URL of an image representing the person, company, or contact information given in the other fields in the form.\n\n#### Web authorization token\n\nWith {{htmlelement(\"input\")}} and {{htmlelement(\"textarea\")}}, the `webauthn` token can be included last to indicate the user agent should show public key credentials when the user is interacting with the control.\n\n- `webauthn`\n  - : Passkeys generated by the [Web Authentication API](/blog/Web/API/Web_Authentication_API), as requested by a conditional {{domxref(\"CredentialsContainer.get()\", \"navigator.credentials.get()\")}} call (i.e., one that includes `mediation: 'conditional'`). If included, this is the last token in the space-separated token list. See [Sign in with a passkey through form autofill](https://web.dev/articles/passkey-form-autofill) for more details.\n\n## Examples\n\n```html\n<div>\n  <label for=\"cc-number\">Enter your credit card number</label>\n  <input name=\"cc-number\" id=\"cc-number\" autocomplete=\"off\" />\n</div>\n```\n\n### Administrative levels in addresses\n\nThe four administrative level fields (`address-level1` through `address-level4`) describe the address in terms of increasing levels of precision within the country in which the address is located. Each country has its own system of administrative levels, and may arrange the levels in different orders when addresses are written.\n\n`address-level1` always represents the broadest administrative division; it is the least-specific portion of the address short of the country name.\n\n### Form layout flexibility\n\nGiven that different countries write their address in different ways, with each field in different places within the address, and even different sets and numbers of fields entirely, it can be helpful if, when possible, your site is able to switch to the layout expected by your users when presenting an address entry form, given the country the address is located within.\n\n### Variations\n\nThe way each administrative level is used will vary from country to country. Below are some examples; this is not meant to be an exhaustive list.\n\n#### United States\n\nA typical home address within the United States looks like this:\n\n432 Anywhere St\nExampleville CA 95555\n\nIn the United States, the least-specific portion of the address is the state, in this case \"CA\" (the official US Postal Service shorthand for \"California\"). Thus `address-level1` is the state, or \"CA\" in this case.\n\nThe second-least specific portion of the address is the city or town name, so `address-level2` is \"Exampleville\" in this example address.\n\nUnited States addresses do not use levels 3 and up.\n\n#### United Kingdom\n\nAddress input forms in the UK should contain one or two address levels and one, two or three address lines, depending on the address. A complete address would look like so:\n\n103 Frogmarch Street\nUpper-Wapping\nWinchelsea\nWhereshire\nTN99 8ZZ\n\nThe address levels are:\n\n- `address-level1`: The county — \"Whereshire\" in this case.\n- `address-level2`: The post town — \"Winchelsea\" in this case.\n- `address-line2`: The locality — \"Upper-Wapping\" in this case.\n- `address-line1`: The house/street particulars — \"103 Frogmarch Street\".\n\nThe postcode is separate. Note that you can actually use just the postcode and `address-line1` to successfully deliver mail in the UK, so they should be the only mandatory items, but usually people tend to provide more details.\n\n#### China\n\nChina can use as many as three administrative levels: the province, the city, and the district.\n\nThe 6 digit postal code is not always needed but when supplied it is placed separately with a label for clarity. For example:\n\n北京市东城区建国门北大街 8 号华润大厦 17 层 1708 单元\n邮编：100005\n\n#### Japan\n\nAn address in Japan is typically **written in one line**, in an order from the least-specific to more-specific portions (in **reverse order to the United States**). There are two or three administrative levels in an address. Additional line can be used to show building names and room numbers. The postal code is separate. For example:\n\n〒 381-0000\n長野県長野市某町 123\n\n\"〒\" and following seven digits shows the postal code.\n\n`address-level1` is used for prefectures or the Tokyo Metropolis; \"長野県\" (Nagano Prefecture) is in this case. `address-level2` is typically used for cities, counties, towns and villages; \"長野市\" (Nagano City) in this case. \"某町 123\" is `address-line1` which consists of an area name and a lot number.\n\n## Specifications\n\n{{Specifications}}\n\n## Browser compatibility\n\n{{Compat}}\n\n## See also\n\n- The {{htmlelement(\"input\")}} element\n- The {{htmlelement(\"select\")}} element\n- The {{htmlelement(\"textarea\")}} element\n- The {{htmlelement(\"form\")}} element\n- [HTML forms](/blog/Learn_web_development/Extensions/Forms)\n- All [global attributes](/blog/Web/HTML/Reference/Global_attributes)\n","slug":"7e3926fc9bdb4983abcd0e88317b63a6","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-06T10:26:57.217Z","dateupdated":"2025-07-06T10:26:57.217Z","layout":"PostBanner"}