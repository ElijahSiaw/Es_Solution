{"title":"HTML attribute: Minlength","tag":"web/html/reference/attributes/minlength","post":"\n\n{{Sidebar(\"web/html/reference/attributes\")}}\n\nThe **`minlength`** attribute defines the minimum [string length](/blog/Web/JavaScript/Reference/Global_Objects/String/length) that the user can enter into an {{htmlelement('input')}} or {{htmlelement('textarea')}}. The attribute must have an integer value of 0 or higher.\n\nThe length is measured in UTF-16 code units, which ([for most scripts](/blog/Web/JavaScript/Reference/Global_Objects/String/length#strings_with_length_not_equal_to_the_number_of_characters)) is equivalent to the number of characters. If no `minlength` is specified, or an invalid value is specified, the input has no minimum length. This value must be less than or equal to the value of [maxlength](/blog/Web/HTML/Reference/Attributes/maxlength), otherwise the value will never be valid, as it is impossible to meet both criteria.\n\nThe input will fail constraint validation if the length of the text value of the field is less than minlength UTF-16 code units long, with {{domxref('validityState.tooShort')}} returning `true`. Constraint validation is only applied when the value is changed by the user. Once submission fails, some browsers will display an error message indicating the minimum length required and the current length.\n\n`minlength` does not imply [`required`](/blog/Web/HTML/Reference/Attributes/required); an input only violates a `minlength` constraint if the user has input a value. If an input is not `required`, an empty string can be submitted even if `minlength` is set.\n\n{{InteractiveExample(\"HTML Demo: minlength\", \"tabbed-shorter\")}}\n\n```html interactive-example\n<label for=\"name\">Product name:</label>\n<input\n  id=\"name\"\n  name=\"name\"\n  type=\"text\"\n  value=\"Shampoo\"\n  minlength=\"3\"\n  maxlength=\"20\"\n  required />\n\n<label for=\"description\">Product description:</label>\n<textarea\n  id=\"description\"\n  name=\"description\"\n  minlength=\"10\"\n  maxlength=\"40\"\n  required></textarea>\n```\n\n```css interactive-example\nlabel {\n  display: block;\n  margin-top: 1em;\n}\n\ninput:valid,\ntextarea:valid {\n  background-color: palegreen;\n}\n```\n\n## Examples\n\nBy adding `minlength=\"5\"`, the value must either be empty or five characters or longer to be valid.\n\n```html\n<label for=\"fruit\">Enter a fruit name that is at least 5 letters long</label>\n<input type=\"text\" minlength=\"5\" id=\"fruit\" />\n```\n\nWe can use pseudoclasses to style the element based on whether the value is valid. The value will be valid as long as it is either null (empty) or five or more characters long. _Lime_ is invalid, _lemon is valid_.\n\n```css\ninput {\n  border: 2px solid currentcolor;\n}\ninput:invalid {\n  border: 2px dashed red;\n}\ninput:invalid:focus {\n  background-image: linear-gradient(pink, lightgreen);\n}\n```\n\n{{EmbedLiveSample('Examples', '100%', 200)}}\n\n## Specifications\n\n{{Specifications}}\n\n## Browser compatibility\n\n{{Compat}}\n\n## See also\n\n- [`maxlength`](/blog/Web/HTML/Reference/Attributes/maxlength)\n- [`size`](/blog/Web/HTML/Reference/Attributes/size)\n- [`pattern`](/blog/Web/HTML/Reference/Attributes/pattern)\n- [Constraint validation](/blog/Web/HTML/Guides/Constraint_validation)\n- [Form validation](/blog/Learn_web_development/Extensions/Forms/Form_validation)\n- {{htmlelement('input')}}\n","slug":"b89e123333254fb89c16d0be77e81b8d","authors":"Admin Es Solution","draft":false,"datecreated":"2025-07-06T10:26:58.403Z","dateupdated":"2025-07-06T10:26:58.403Z","layout":"PostBanner"}